diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2d3fcf0..60d6c0f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -112,8 +112,8 @@ LIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)
 #     set( OpenCV_DIR /opt/opencv3/share/OpenCV )
 #     find_package(OpenCV 3.4.0 REQUIRED)
 # endif()
-find_package(OpenCV 3.4.5 REQUIRED
-                 PATHS /opt/opencv
+find_package(OpenCV 3.4 REQUIRED
+                 PATHS /opt/OpenCV3
                  NO_DEFAULT_PATH)
     
 # customize eigen dir
@@ -304,61 +304,61 @@ endif()
 
 # Build examples
 
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/tools)
-add_executable(bin_vocabulary tools/bin_vocabulary.cc)
-target_link_libraries(bin_vocabulary ${PROJECT_NAME})
-
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Monocular)
-
-add_executable(mono_general Examples/Monocular/mono_general.cc ${SLAM_EXAMPLE_HEADERS})
-target_link_libraries(mono_general
-    GL
-    glut
-    GLU
-    ${PROJECT_NAME}
-    ${Boost_LIBRARIES}
-    ${SLAM_PLUS_PLUS_LIBRARIES}
-    ${OpenBLAS_LIBRARIES}
-    ${ARMADILLO_LIBRARIES}
-    )
-
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Stereo)
-
-add_executable(stereo_general Examples/Stereo/stereo_general.cc ${SLAM_EXAMPLE_HEADERS})
-target_link_libraries(stereo_general
-    GL
-    glut
-    GLU
-    ${PROJECT_NAME}
-    ${Boost_LIBRARIES}
-    ${SLAM_PLUS_PLUS_LIBRARIES}
-    ${OpenBLAS_LIBRARIES}
-    ${ARMADILLO_LIBRARIES}
-    )
+#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/tools)
+#add_executable(bin_vocabulary tools/bin_vocabulary.cc)
+#target_link_libraries(bin_vocabulary ${PROJECT_NAME})
+
+#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Monocular)
+
+#add_executable(mono_general Examples/Monocular/mono_general.cc ${SLAM_EXAMPLE_HEADERS})
+#target_link_libraries(mono_general
+#    GL
+#    glut
+#    GLU
+#    ${PROJECT_NAME}
+#    ${Boost_LIBRARIES}
+#    ${SLAM_PLUS_PLUS_LIBRARIES}
+#    ${OpenBLAS_LIBRARIES}
+#    ${ARMADILLO_LIBRARIES}
+#    )
+
+#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Examples/Stereo)
+
+#add_executable(stereo_general Examples/Stereo/stereo_general.cc ${SLAM_EXAMPLE_HEADERS})
+#target_link_libraries(stereo_general
+#    GL
+#    glut
+#    GLU
+#    ${PROJECT_NAME}
+#    ${Boost_LIBRARIES}
+#    ${SLAM_PLUS_PLUS_LIBRARIES}
+#    ${OpenBLAS_LIBRARIES}
+#    ${ARMADILLO_LIBRARIES}
+#    )
 
 
 # Build test cases
 
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/test)
+#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/test)
 
-add_executable(testObs
-    ${SRCS}
-    ./test/test_Kine_1.cpp
-    ./test/test_Kine_2.cpp
-    ./test/test_Jacobian.cpp
-    ./test/test_Greedy.cpp
-    ./test/test_GoodMap.cpp
-    ./test/test_Stereo.cpp
+#add_executable(testObs
+#    ${SRCS}
+#    ./test/test_Kine_1.cpp
+#    ./test/test_Kine_2.cpp
+#    ./test/test_Jacobian.cpp
+#    ./test/test_Greedy.cpp
+#    ./test/test_GoodMap.cpp
+#    ./test/test_Stereo.cpp
 #    ./test/test_MapIO.cpp
-    ./test/main.cpp
-    )
-target_link_libraries(testObs
-    GL
-    glut
-    GLU
-    ${PROJECT_NAME}
-    ${GTest_LIBRARIES}
-    ${SLAM_PLUS_PLUS_LIBRARIES}
-    ${OpenBLAS_LIBRARIES}
-    ${ARMADILLO_LIBRARIES}
-    )
+#    ./test/main.cpp
+#    )
+#target_link_libraries(testObs
+#    GL
+#    glut
+#    GLU
+#    ${PROJECT_NAME}
+#    ${GTest_LIBRARIES}
+#    ${SLAM_PLUS_PLUS_LIBRARIES}
+#    ${OpenBLAS_LIBRARIES}
+#    ${ARMADILLO_LIBRARIES}
+#    )
diff --git a/Thirdparty/DBoW2/CMakeLists.txt b/Thirdparty/DBoW2/CMakeLists.txt
index 1ba36e0..9592fd4 100755
--- a/Thirdparty/DBoW2/CMakeLists.txt
+++ b/Thirdparty/DBoW2/CMakeLists.txt
@@ -53,11 +53,11 @@ set(SRCS_DUTILS
 #     set( OpenCV_DIR /opt/opencv3/share/OpenCV )
 #     find_package(OpenCV 3.4.0 REQUIRED)
 # endif()
-find_package(OpenCV 3.4.5 REQUIRED
-                 PATHS /opt/opencv
+find_package(OpenCV 3.4 REQUIRED
+                 PATHS /opt/OpenCV3
                  NO_DEFAULT_PATH)
 
-find_package(Boost 1.73.0 COMPONENTS system serialization filesystem date_time REQUIRED)
+find_package(Boost COMPONENTS system serialization filesystem date_time REQUIRED)
 
 set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
 
diff --git a/Thirdparty/SLAM++/CMakeLists.txt b/Thirdparty/SLAM++/CMakeLists.txt
index ffed591..e9437e0 100644
--- a/Thirdparty/SLAM++/CMakeLists.txt
+++ b/Thirdparty/SLAM++/CMakeLists.txt
@@ -569,19 +569,20 @@ IF(SLAM_P_P_EIGEN33)
       ${ARMADILLO_INCLUDE_DIR}
 	  ${CUDA_INCLUDE_IFENABLED}
 	  ${PROJECT_SOURCE_DIR}/include/
-      /opt/eigen/include/eigen3/
-#	  ${PROJECT_SOURCE_DIR}/include/eigen33/
-#	  ${PROJECT_SOURCE_DIR}/external/Ceres/include/
-#	  ${PROJECT_SOURCE_DIR}/external/Ceres/internal/
-#	  ${PROJECT_SOURCE_DIR}/external/NIST_BLAS/include/
-#	  ${PROJECT_SOURCE_DIR}/external/g2o/
+#      /opt/eigen/include/eigen3/
+	  ${PROJECT_SOURCE_DIR}/include/eigen33/
+	  ${PROJECT_SOURCE_DIR}/include/eigen33/eigen
+	  ${PROJECT_SOURCE_DIR}/external/Ceres/include/
+	  ${PROJECT_SOURCE_DIR}/external/Ceres/internal/
+	  ${PROJECT_SOURCE_DIR}/external/NIST_BLAS/include/
+	  ${PROJECT_SOURCE_DIR}/external/g2o/
 	  ${PROJECT_SOURCE_DIR}/include/cholmod/SuiteSparse/)
 ELSE(SLAM_P_P_EIGEN33)
 	INCLUDE_DIRECTORIES(
       ${ARMADILLO_INCLUDE_DIR}
 	  ${CUDA_INCLUDE_IFENABLED}
 	  ${PROJECT_SOURCE_DIR}/include/
-      /usr/include/eigen3/
+      /opt/eigen/include/eigen3/
 #	  ${PROJECT_SOURCE_DIR}/include/eigen32/
 #	  ${PROJECT_SOURCE_DIR}/external/Ceres/include/
 #	  ${PROJECT_SOURCE_DIR}/external/Ceres/internal/
diff --git a/include/LoopClosing.h b/include/LoopClosing.h
index 04ed0db..2d205c2 100755
--- a/include/LoopClosing.h
+++ b/include/LoopClosing.h
@@ -47,7 +47,7 @@ class LoopClosing
 public:
     typedef pair<set<KeyFrame *>, int> ConsistentGroup;
     typedef map<KeyFrame *, g2o::Sim3, std::less<KeyFrame *>,
-                Eigen::aligned_allocator<std::pair<const KeyFrame *, g2o::Sim3>>>
+                Eigen::aligned_allocator<std::pair<KeyFrame * const, g2o::Sim3>>>
         KeyFrameAndPose;
 
 public:
diff --git a/tools/bin_vocabulary b/tools/bin_vocabulary
index 3a9d0a7..03cf57c 100755
Binary files a/tools/bin_vocabulary and b/tools/bin_vocabulary differ
